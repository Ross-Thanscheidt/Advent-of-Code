using System.Diagnostics;

namespace Advent_of_Code
{
    public partial class Year_2024 : IYear
    {
        public string Day_22(StringReader input)
        {
            Stopwatch stopwatch = Stopwatch.StartNew();

            long sumOfSecretNumbers = 0;
            long maxBananas = 0;

            Dictionary<(long, long, long, long), long> totals = [];

            for (var line = input.ReadLine(); line != null; line = input.ReadLine())
            {
                long number = long.Parse(line);

                Dictionary<(long, long, long, long), long> buyerSequences = [];

                List<long> last = [number % 10];

                for (int iteration = 0; iteration < 2_000; iteration++)
                {
                    number = ((number << 6) ^ number) % 16777216;
                    number ^= number >> 5;
                    number = ((number << 11) ^ number) % 16777216;

                    last.Add(number % 10);

                    if (last.Count > 5)
                    {
                        last.RemoveAt(0);
                    }

                    if (last.Count == 5)
                    {
                        (long, long, long, long) key = (last[1] - last[0], last[2] - last[1], last[3] - last[2], last[4] - last[3]);

                        if (!buyerSequences.ContainsKey(key))
                        {
                            buyerSequences.Add(key, last[4]);
                        }
                    }
                }

                sumOfSecretNumbers += number;

                foreach (var sequence in buyerSequences)
                {
                    if (totals.ContainsKey(sequence.Key))
                    {
                        totals[sequence.Key] += sequence.Value;
                    }
                    else
                    {
                        totals.Add(sequence.Key, sequence.Value);
                    }
                }
            }

            maxBananas = totals.Max(kv => kv.Value);

            stopwatch.Stop();

            return $"{sumOfSecretNumbers:N0} is the sum of the 2000th secret number generated by each buyer\r\n" +
                   $"{maxBananas:N0} is the most bananas you can get\r\n" +
                   $"({stopwatch.Elapsed.TotalMilliseconds} ms)";
        }
    }
}
